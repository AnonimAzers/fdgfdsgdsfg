from pyrogram.types import ReplyKeyboardMarkup, KeyboardButton
from pyrogram.handlers import MessageHandler
from pyrogram import filters
import asyncio

class Menu:
    async def button_callback(self, client, message):
        text = message.text
        if text in self._menu_button_handlers:
            await self._menu_button_handlers[text](self, message)

    def __init__(self, _menu_button_handlers, _menu_keyboard, client, message):
        self.menu_button_handlers = _menu_button_handlers
        self._menu_keyboard = _menu_keyboard
        self.client = client
        client.add_handler(MessageHandler(self.button_callback, filters.text & filters.private))


class MeinMenu(Menu):

    _menu_button_handlers = {
        "üñ• –ü—Ä–æ—Å–º–æ—Ç—Ä—ã": lambda self, message: message.reply("–í—ã –≤—ã–±—Ä–∞–ª–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä—ã", reply_markup=ViewSettingsMenu(self.client, message)._menu_keyboard),
        "‚Ü©Ô∏è –ü–µ—Ä–µ—Ö–æ–¥": lambda self, message: message.reply("–í—ã –≤—ã–±—Ä–∞–ª–∏ –ü–µ—Ä–µ—Ö–æ–¥", reply_markup=TransitionSettingsMenu(self.client, message)._menu_keyboard),
        "‚õîÔ∏è –ñ–∞–ª–æ–±—ã": lambda self, message: message.reply("–í—ã –≤—ã–±—Ä–∞–ª–∏ –ñ–∞–ª–æ–±—ã", reply_markup=ReportSettingsMenu(self.client, message)._menu_keyboard),
        "üì¢ –û–ø—Ä–æ—Å": lambda self, message: message.reply("–í—ã –≤—ã–±—Ä–∞–ª–∏ –û–ø—Ä–æ—Å", reply_markup=SurveySettingsMenu(self.client, message)._menu_keyboard),
        "‚ù§Ô∏è –†–µ–∞–∫—Ü–∏–∏": lambda self, message: message.reply("–í—ã –≤—ã–±—Ä–∞–ª–∏ –†–µ–∞–∫—Ü–∏–∏", reply_markup=ReactionSettingsMenu(self.client, message)._menu_keyboard),
        "üóë –£–¥–∞–ª–∏—Ç—å": lambda self, message: message.reply("–í—ã –≤—ã–±—Ä–∞–ª–∏ –£–¥–∞–ª–∏—Ç—å", reply_markup=RemoveSettingsMenu(self.client, message)._menu_keyboard)
    }

    _menu_keyboard = ReplyKeyboardMarkup(keyboard=[
        [KeyboardButton("üñ• –ü—Ä–æ—Å–º–æ—Ç—Ä—ã"), KeyboardButton("‚Ü©Ô∏è –ü–µ—Ä–µ—Ö–æ–¥")],
        [KeyboardButton("‚õîÔ∏è –ñ–∞–ª–æ–±—ã"), KeyboardButton("üì¢ –û–ø—Ä–æ—Å")],
        [KeyboardButton("‚ù§Ô∏è –†–µ–∞–∫—Ü–∏–∏"), KeyboardButton("üóë –£–¥–∞–ª–∏—Ç—å")]
    ], resize_keyboard=True, one_time_keyboard=True, placeholder="Press any button!")

    def __init__(self, client, message):
        super().__init__(MeinMenu._menu_button_handlers, MeinMenu._menu_keyboard, client, message)

class ViewSettingsMenu(Menu):
    _menu_button_handlers = {
        "üñ• –ü—Ä–æ—Å–º–æ—Ç—Ä—ã": lambda self, message: message.reply("–í—ã –≤—ã–±—Ä–∞–ª–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä—ã", reply_markup=ViewSettingsMenu(self.client, message)._menu_keyboard),
        "‚Ü©Ô∏è –ü–µ—Ä–µ—Ö–æ–¥": lambda self, message: message.reply("–í—ã –≤—ã–±—Ä–∞–ª–∏ –ü–µ—Ä–µ—Ö–æ–¥", reply_markup=TransitionSettingsMenu(self.client, message)._menu_keyboard),
        "‚õîÔ∏è –ñ–∞–ª–æ–±—ã": lambda self, message: message.reply("–í—ã –≤—ã–±—Ä–∞–ª–∏ –ñ–∞–ª–æ–±—ã", reply_markup=ReportSettingsMenu(self.client, message)._menu_keyboard),
        "üì¢ –û–ø—Ä–æ—Å": lambda self, message: message.reply("–í—ã –≤—ã–±—Ä–∞–ª–∏ –û–ø—Ä–æ—Å", reply_markup=SurveySettingsMenu(self.client, message)._menu_keyboard),
        "‚ù§Ô∏è –†–µ–∞–∫—Ü–∏–∏": lambda self, message: message.reply("–í—ã –≤—ã–±—Ä–∞–ª–∏ –†–µ–∞–∫—Ü–∏–∏", reply_markup=ReactionSettingsMenu(self.client, message)._menu_keyboard),
        "üóë –£–¥–∞–ª–∏—Ç—å": lambda self, message: message.reply("–í—ã –≤—ã–±—Ä–∞–ª–∏ –£–¥–∞–ª–∏—Ç—å", reply_markup=RemoveSettingsMenu(self.client, message)._menu_keyboard)
    }

    _menu_keyboard = ReplyKeyboardMarkup(keyboard=[
        [KeyboardButton("üñ• –ü—Ä–æ—Å–º–æ—Ç—Ä—ã"), KeyboardButton("‚Ü©Ô∏è –ü–µ—Ä–µ—Ö–æ–¥")],
        [KeyboardButton("‚õîÔ∏è –ñ–∞–ª–æ–±—ã"), KeyboardButton("üì¢ –û–ø—Ä–æ—Å")],
        [KeyboardButton("‚ù§Ô∏è –†–µ–∞–∫—Ü–∏–∏"), KeyboardButton("üóë –£–¥–∞–ª–∏—Ç—å")]
    ], resize_keyboard=True, one_time_keyboard=True, placeholder="Press any button!")

    def __init__(self, client, message):
        super().__init__(ViewSettingsMenu._menu_button_handlers, ViewSettingsMenu._menu_keyboard, client, message)

class TransitionSettingsMenu(Menu):
    _menu_button_handlers = {
        "üñ• –ü—Ä–æ—Å–º–æ—Ç—Ä—ã": lambda self, message: message.reply("–í—ã –≤—ã–±—Ä–∞–ª–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä—ã", reply_markup=ViewSettingsMenu(self.client, message)._menu_keyboard),
        "‚Ü©Ô∏è –ü–µ—Ä–µ—Ö–æ–¥": lambda self, message: message.reply("–í—ã –≤—ã–±—Ä–∞–ª–∏ –ü–µ—Ä–µ—Ö–æ–¥", reply_markup=TransitionSettingsMenu(self.client, message)._menu_keyboard),
        "‚õîÔ∏è –ñ–∞–ª–æ–±—ã": lambda self, message: message.reply("–í—ã –≤—ã–±—Ä–∞–ª–∏ –ñ–∞–ª–æ–±—ã", reply_markup=ReportSettingsMenu(self.client, message)(self.client, message)._menu_keyboard),
        "üì¢ –û–ø—Ä–æ—Å": lambda self, message: message.reply("–í—ã –≤—ã–±—Ä–∞–ª–∏ –û–ø—Ä–æ—Å", reply_markup=SurveySettingsMenu(self.client, message)._menu_keyboard),
        "‚ù§Ô∏è –†–µ–∞–∫—Ü–∏–∏": lambda self, message: message.reply("–í—ã –≤—ã–±—Ä–∞–ª–∏ –†–µ–∞–∫—Ü–∏–∏", reply_markup=ReactionSettingsMenu(self.client, message)._menu_keyboard),
        "üóë –£–¥–∞–ª–∏—Ç—å": lambda self, message: message.reply("–í—ã –≤—ã–±—Ä–∞–ª–∏ –£–¥–∞–ª–∏—Ç—å", reply_markup=RemoveSettingsMenu(self.client, message)._menu_keyboard)
    }

    _menu_keyboard = ReplyKeyboardMarkup(keyboard=[
        [KeyboardButton("üñ• –ü—Ä–æ—Å–º–æ—Ç—Ä—ã"), KeyboardButton("‚Ü©Ô∏è –ü–µ—Ä–µ—Ö–æ–¥")],
        [KeyboardButton("‚õîÔ∏è –ñ–∞–ª–æ–±—ã"), KeyboardButton("üì¢ –û–ø—Ä–æ—Å")],
        [KeyboardButton("‚ù§Ô∏è –†–µ–∞–∫—Ü–∏–∏"), KeyboardButton("üóë –£–¥–∞–ª–∏—Ç—å")]
    ], resize_keyboard=True, one_time_keyboard=True, placeholder="Press any button!")

    def __init__(self, client, message):
        super().__init__(TransitionSettingsMenu._menu_button_handlers, TransitionSettingsMenu._menu_keyboard, client, message)

class ReportSettingsMenu(Menu):
    _menu_button_handlers = {
        "üñ• –ü—Ä–æ—Å–º–æ—Ç—Ä—ã": lambda self, message: message.reply("–í—ã –≤—ã–±—Ä–∞–ª–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä—ã", reply_markup=ViewSettingsMenu(self.client, message)._menu_keyboard),
        "‚Ü©Ô∏è –ü–µ—Ä–µ—Ö–æ–¥": lambda self, message: message.reply("–í—ã –≤—ã–±—Ä–∞–ª–∏ –ü–µ—Ä–µ—Ö–æ–¥", reply_markup=TransitionSettingsMenu(self.client, message)._menu_keyboard),
        "‚õîÔ∏è –ñ–∞–ª–æ–±—ã": lambda self, message: message.reply("–í—ã –≤—ã–±—Ä–∞–ª–∏ –ñ–∞–ª–æ–±—ã", reply_markup=ReportSettingsMenu(self.client, message)._menu_keyboard),
        "üì¢ –û–ø—Ä–æ—Å": lambda self, message: message.reply("–í—ã –≤—ã–±—Ä–∞–ª–∏ –û–ø—Ä–æ—Å", reply_markup=SurveySettingsMenu(self.client, message)._menu_keyboard),
        "‚ù§Ô∏è –†–µ–∞–∫—Ü–∏–∏": lambda self, message: message.reply("–í—ã –≤—ã–±—Ä–∞–ª–∏ –†–µ–∞–∫—Ü–∏–∏", reply_markup=ReactionSettingsMenu(self.client, message)._menu_keyboard),
        "üóë –£–¥–∞–ª–∏—Ç—å": lambda self, message: message.reply("–í—ã –≤—ã–±—Ä–∞–ª–∏ –£–¥–∞–ª–∏—Ç—å", reply_markup=RemoveSettingsMenu(self.client, message)._menu_keyboard)
    }

    _menu_keyboard = ReplyKeyboardMarkup(keyboard=[
        [KeyboardButton("üñ• –ü—Ä–æ—Å–º–æ—Ç—Ä—ã"), KeyboardButton("‚Ü©Ô∏è –ü–µ—Ä–µ—Ö–æ–¥")],
        [KeyboardButton("‚õîÔ∏è –ñ–∞–ª–æ–±—ã"), KeyboardButton("üì¢ –û–ø—Ä–æ—Å")],
        [KeyboardButton("‚ù§Ô∏è –†–µ–∞–∫—Ü–∏–∏"), KeyboardButton("üóë –£–¥–∞–ª–∏—Ç—å")]
    ], resize_keyboard=True, one_time_keyboard=True, placeholder="Press any button!")

    def __init__(self, client, message):
        super().__init__(ReportSettingsMenu._menu_button_handlers, ReportSettingsMenu._menu_keyboard, client, message)

class SurveySettingsMenu(Menu):
    _menu_button_handlers = {
        "üñ• –ü—Ä–æ—Å–º–æ—Ç—Ä—ã": lambda self, message: message.reply("–í—ã –≤—ã–±—Ä–∞–ª–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä—ã", reply_markup=ViewSettingsMenu(self.client, message)._menu_keyboard),
        "‚Ü©Ô∏è –ü–µ—Ä–µ—Ö–æ–¥": lambda self, message: message.reply("–í—ã –≤—ã–±—Ä–∞–ª–∏ –ü–µ—Ä–µ—Ö–æ–¥", reply_markup=TransitionSettingsMenu(self.client, message)._menu_keyboard),
        "‚õîÔ∏è –ñ–∞–ª–æ–±—ã": lambda self, message: message.reply("–í—ã –≤—ã–±—Ä–∞–ª–∏ –ñ–∞–ª–æ–±—ã", reply_markup=ReportSettingsMenu(self.client, message)._menu_keyboard),
        "üì¢ –û–ø—Ä–æ—Å": lambda self, message: message.reply("–í—ã –≤—ã–±—Ä–∞–ª–∏ –û–ø—Ä–æ—Å", reply_markup=SurveySettingsMenu(self.client, message)._menu_keyboard),
        "‚ù§Ô∏è –†–µ–∞–∫—Ü–∏–∏": lambda self, message: message.reply("–í—ã –≤—ã–±—Ä–∞–ª–∏ –†–µ–∞–∫—Ü–∏–∏", reply_markup=ReactionSettingsMenu(self.client, message)._menu_keyboard),
        "üóë –£–¥–∞–ª–∏—Ç—å": lambda self, message: message.reply("–í—ã –≤—ã–±—Ä–∞–ª–∏ –£–¥–∞–ª–∏—Ç—å", reply_markup=RemoveSettingsMenu(self.client, message)._menu_keyboard)
    }

    _menu_keyboard = ReplyKeyboardMarkup(keyboard=[
        [KeyboardButton("üñ• –ü—Ä–æ—Å–º–æ—Ç—Ä—ã"), KeyboardButton("‚Ü©Ô∏è –ü–µ—Ä–µ—Ö–æ–¥")],
        [KeyboardButton("‚õîÔ∏è –ñ–∞–ª–æ–±—ã"), KeyboardButton("üì¢ –û–ø—Ä–æ—Å")],
        [KeyboardButton("‚ù§Ô∏è –†–µ–∞–∫—Ü–∏–∏"), KeyboardButton("üóë –£–¥–∞–ª–∏—Ç—å")]
    ], resize_keyboard=True, one_time_keyboard=True, placeholder="Press any button!")

    def __init__(self, client, message):
        super().__init__(SurveySettingsMenu._menu_button_handlers, SurveySettingsMenu._menu_keyboard, client, message)

class ReactionSettingsMenu(Menu):
    _menu_button_handlers = {
        "üñ• –ü—Ä–æ—Å–º–æ—Ç—Ä—ã": lambda self, message: message.reply("–í—ã –≤—ã–±—Ä–∞–ª–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä—ã", reply_markup=ViewSettingsMenu(self.client, message)._menu_keyboard),
        "‚Ü©Ô∏è –ü–µ—Ä–µ—Ö–æ–¥": lambda self, message: message.reply("–í—ã –≤—ã–±—Ä–∞–ª–∏ –ü–µ—Ä–µ—Ö–æ–¥", reply_markup=TransitionSettingsMenu(self.client, message)._menu_keyboard),
        "‚õîÔ∏è –ñ–∞–ª–æ–±—ã": lambda self, message: message.reply("–í—ã –≤—ã–±—Ä–∞–ª–∏ –ñ–∞–ª–æ–±—ã", reply_markup=ReportSettingsMenu(self.client, message)._menu_keyboard),
        "üì¢ –û–ø—Ä–æ—Å": lambda self, message: message.reply("–í—ã –≤—ã–±—Ä–∞–ª–∏ –û–ø—Ä–æ—Å", reply_markup=SurveySettingsMenu(self.client, message)._menu_keyboard),
        "‚ù§Ô∏è –†–µ–∞–∫—Ü–∏–∏": lambda self, message: message.reply("–í—ã –≤—ã–±—Ä–∞–ª–∏ –†–µ–∞–∫—Ü–∏–∏", reply_markup=ReactionSettingsMenu(self.client, message)._menu_keyboard),
        "üóë –£–¥–∞–ª–∏—Ç—å": lambda self, message: message.reply("–í—ã –≤—ã–±—Ä–∞–ª–∏ –£–¥–∞–ª–∏—Ç—å", reply_markup=RemoveSettingsMenu(self.client, message)._menu_keyboard)
    }

    _menu_keyboard = ReplyKeyboardMarkup(keyboard=[
        [KeyboardButton("üñ• –ü—Ä–æ—Å–º–æ—Ç—Ä—ã"), KeyboardButton("‚Ü©Ô∏è –ü–µ—Ä–µ—Ö–æ–¥")],
        [KeyboardButton("‚õîÔ∏è –ñ–∞–ª–æ–±—ã"), KeyboardButton("üì¢ –û–ø—Ä–æ—Å")],
        [KeyboardButton("‚ù§Ô∏è –†–µ–∞–∫—Ü–∏–∏"), KeyboardButton("üóë –£–¥–∞–ª–∏—Ç—å")]
    ], resize_keyboard=True, one_time_keyboard=True, placeholder="Press any button!")

    def __init__(self, client, message):
        super().__init__(ReactionSettingsMenu._menu_button_handlers, ReactionSettingsMenu._menu_keyboard, client, message)

class RemoveSettingsMenu(Menu):
    _menu_button_handlers = {
        "üñ• –ü—Ä–æ—Å–º–æ—Ç—Ä—ã": lambda self, message: message.reply("–í—ã –≤—ã–±—Ä–∞–ª–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä—ã", reply_markup=ViewSettingsMenu(self.client, message)._menu_keyboard),
        "‚Ü©Ô∏è –ü–µ—Ä–µ—Ö–æ–¥": lambda self, message: message.reply("–í—ã –≤—ã–±—Ä–∞–ª–∏ –ü–µ—Ä–µ—Ö–æ–¥", reply_markup=TransitionSettingsMenu(self.client, message)._menu_keyboard),
        "‚õîÔ∏è –ñ–∞–ª–æ–±—ã": lambda self, message: message.reply("–í—ã –≤—ã–±—Ä–∞–ª–∏ –ñ–∞–ª–æ–±—ã", reply_markup=ReportSettingsMenu(self.client, message)._menu_keyboard),
        "üì¢ –û–ø—Ä–æ—Å": lambda self, message: message.reply("–í—ã –≤—ã–±—Ä–∞–ª–∏ –û–ø—Ä–æ—Å", reply_markup=SurveySettingsMenu(self.client, message)._menu_keyboard),
        "‚ù§Ô∏è –†–µ–∞–∫—Ü–∏–∏": lambda self, message: message.reply("–í—ã –≤—ã–±—Ä–∞–ª–∏ –†–µ–∞–∫—Ü–∏–∏", reply_markup=ReactionSettingsMenu(self.client, message)._menu_keyboard),
        "üóë –£–¥–∞–ª–∏—Ç—å": lambda self, message: message.reply("–í—ã –≤—ã–±—Ä–∞–ª–∏ –£–¥–∞–ª–∏—Ç—å", reply_markup=RemoveSettingsMenu(self.client, message)._menu_keyboard)
    }

    _menu_keyboard = ReplyKeyboardMarkup(keyboard=[
        [KeyboardButton("üñ• –ü—Ä–æ—Å–º–æ—Ç—Ä—ã"), KeyboardButton("‚Ü©Ô∏è –ü–µ—Ä–µ—Ö–æ–¥")],
        [KeyboardButton("‚õîÔ∏è –ñ–∞–ª–æ–±—ã"), KeyboardButton("üì¢ –û–ø—Ä–æ—Å")],
        [KeyboardButton("‚ù§Ô∏è –†–µ–∞–∫—Ü–∏–∏"), KeyboardButton("üóë –£–¥–∞–ª–∏—Ç—å")]
    ], resize_keyboard=True, one_time_keyboard=True, placeholder="Press any button!")

    def __init__(self, client, message):
        super().__init__(RemoveSettingsMenu._menu_button_handlers, RemoveSettingsMenu._menu_keyboard, client, message)
